<!doctype html>
<html lang="de">

<head>
	<?php include "../inc/meta.inc"; ?>

	<base href="<?php echo dirname($_SERVER['SCRIPT_NAME']); ?>">
	<title>Maßgeschneiderte QGIS-Arbeitsumgebung mittels Python – FOSSGIS 2021</title>

	<link rel="stylesheet" href="./css/normalize.css">
	<link rel="stylesheet" href="./css/base.css">
	<link rel="stylesheet" href="./css/print.css" media="print">
</head>

<body id="programm">
	<?php include "../inc/header.inc"; ?>

        <!-- This file was generated by a script. Do not edit this file in Git,
             edit contents in Pretalx, regenerate the PHP files and commit them
             in the Git repository of the website. -->
        <p><a href="programm/montag.php#session_PNGTBU">&#9668;&#9668; zurück zum Programm</a> </p>
        <h2 class='abstract-title'>Maßgeschneiderte QGIS-Arbeitsumgebung mittels Python</h2>
        <section>
            <p>
                <span class='abstract-sessiontype'>Demo-Session</span>                von <span class='abstract-speakers'>Thomas Baumann</span></p>
                                                                            <p><span class='abstract-time-heading'>Zeit: </span>Montag 07. Juni 11:00 Uhr
                <br><span class='abstract-room-heading'>Ort: </span>Bühne 4
                <br><span class='abstract-room-heading'>Dauer: </span>55 Minuten
            </p>

                        
            <p>QGIS kommt schon von Hause aus mit einem beachtlichen Funktionsumfang daher. Trotzdem gibt es noch verschiedenste Stellen, an denen man mittels Python die Funktionalitäten von QGIS erweitern oder an eigene Bedürfnisse und Workflows anpassen kann.</p>
<p>Im Rahmen einer Demosession würde ich gerne die verschiedenen Stellen aufzeigen, an denen man mittels Python QGIS anpassen oder erweitern kann:</p>
<ul>
<li>Ad-Hoc-Ausführen von Python Code (Python-Console, Script-Editor und ggf. Scriptrunner): </li>
</ul>
<p>Ein unkomplizierter und schneller Weg um Python in QGIS auszuführen. In der Regel der Einstiegspunkt für PyQGIS-Newcommer.</p>
<ul>
<li>startup.py und PYQGIS_STARTUP:</li>
</ul>
<p>Bei jedem Start von QGIS wird an einem bestimmten Pfad nach einer Datei startup.py gesucht und deren Inhalt ausgeführt wenn sie gefunden wird. Über die Umgebungsvariable PYQGIS_STARTUP kann man zusätzlich eine Python-Datei beim Start von QGIS ausführen lassen bevor die Initialisierung von QGIS beendet ist.</p>
<ul>
<li>Benutzerdefinierte Funktionen:</li>
</ul>
<p>Benutzerdefinierte Funktionen kann man an verschiedensten Stellen innerhalb von QGIS nutzen: Feldrechner, Datendefinierte Einstellungen („Übersteuerung“), Textfelder im Drucklayout/Atlas</p>
<ul>
<li>Attributformular anpassen mit der Python Init-Funktion: </li>
</ul>
<p>Wem die umfangreichen Einstellungsmöglichkeiten im Reiter „Attributformular“ eines Vektorlayers noch nicht reichen kann mittels Python eigene Logik zur Analyse der Nutzereingaben hinterlegen</p>
<ul>
<li>Makros:</li>
</ul>
<p>QGIS-Makros können beim Öffnen, Speichern und Schließen eines Projektes verwendet werden.
Bsp: Sicherstellen, dass niemand anderes gerade an meinem auf einem Netzlaufwerk abgelegten QGIS-Projekt arbeitet.</p>
<ul>
<li>QGIS-Aktionen ("Actions")</li>
</ul>
<p>Mittels QGIS-Aktionen kann man z.B. mit einem Klick auf ein Geometrieobjekt Python-Code ausführen
Beispiel: Action zum Anzeigen von Kind-Elementen für ein selektiertes Objekt.</p>
<ul>
<li>Processing-Toolbox:</li>
</ul>
<p>Mittels Python kann man eigene Processing-Algorithmen erzeugen oder bestehende Algorithmen an eigene Bedürfnisse anpassen</p>
<ul>
<li>„--code“-Parameter beim Aufruf von QGIS: </li>
</ul>
<p>Über den code-Parameter kann man beim Start von QGIS direkt einen Python-Code übergeben, der direkt nach dem Laden von QGIS ausgeführt wird</p>
<ul>
<li>Plugins:</li>
</ul>
<p>Nicht zuletzt  kann man auch über in Python geschriebene Plugins Python in QGIS nutzen.
Ich zeige einen Ausblick darauf, wie man:
   - mit Hilfe eines einmal erzeugten Minimal-Plugins in kürzester Zeit eigene Funktionalitäten in QGIS testen und perspektivisch einbetten kann
   - Eigene Processing-Algorithmen dauerhaft bereitstellt oder verteilt
   - Eigene Locator Provider nutzt, um noch effektiver mit QGIS zu arbeiten</p>
<p>Ausblick: Standalone/ Kommandozeilen- PyQGIS-Scripte, die ausserhalb der QGIS-GUI laufen.
( Ab QGIS 3.14 auch Aufruf eigener Processing-Scripte über „qgis_process run“ außerhalb der GUI)</p>
        <div class='abstract-bio'>
            <h3 class='abstract-bio-name'>Thomas Baumann</h3>
            <p>QGIS und weitere GIS-/WebGIS-Technologien sind nun seit mehr als 10 Jahren schon mein beruflicher Fokus.</p>
<p>Nachdem ich von 2010-2015 neben dem Projektgeschäft in vielen GIS-Weiterbildungen unterrichtet habe konzentriere ich mich inzwischen bei meiner Tätigkeit mehr auf die Administration und den Neuaufbau von Geodateninfrastrukturen, sowie Consulting zu GIS-Themen.</p>
<p>Hausintern betreue ich auch unsere QGIS-Installation hinsichtlich Rollout, Plugin-Entwicklung und Support für mehr als 20 firmeninterne QGIS-Nutzer.</p>
        </div>
        </section>


	<?php include "../inc/footer.inc"; ?>

</body>

</html>